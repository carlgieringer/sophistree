services:
  web-app:
    build:
      context: ../packages/web-app/
      dockerfile: docker/web-app.dockerfile
      args:
        BASE_VERSION: ${WEB_APP_BASE_IMAGE_VERSION:-latest}
    image: sophistree/web-app:${WEB_APP_IMAGE_VERSION:-latest}
    container_name: sophistree-web-app
    depends_on:
      db:
        condition: service_healthy
      web-app-migrator:
        condition: service_completed_successfully
    restart: always

  web-app-migrator:
    build:
      context: ../packages/web-app
      dockerfile: docker/web-app-migrator.dockerfile
      args:
        BASE_VERSION: ${WEB_APP_BASE_IMAGE_VERSION:-latest}
    image: sophistree/web-app-migrator:${WEB_APP_IMAGE_VERSION:-latest}
    container_name: sophistree-web-app-migrator
    depends_on:
      db:
        condition: service_healthy

  sync-service:
    build:
      context: ../packages/sync-service
      dockerfile: docker/sync-service.dockerfile
    image: sophistree/sync-service:${SYNC_SERVICE_IMAGE_VERSION:-latest}
    container_name: sophistree-sync-service
    depends_on:
      db:
        condition: service_healthy
      sync-service-migrator:
        condition: service_completed_successfully
    restart: always

  sync-service-migrator:
    build:
      context: ../packages/sync-service
      dockerfile: docker/sync-service-migrator.dockerfile
    image: sophistree/sync-service-migrator:${SYNC_SERVICE_IMAGE_VERSION:-latest}
    container_name: sophistree-sync-service-migrator
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16
    container_name: sophistree-db
    environment:
      POSTGRES_USER: sophistree
      POSTGRES_DB: sophistree
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sophistree -d sophistree"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  caddy:
    build:
      dockerfile: caddy.dockerfile
    image: sophistree/caddy:${CADDY_IMAGE_VERSION:-latest}
    container_name: sophistree-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./site:/srv
      - caddy_data:/data
      - caddy_config:/config

volumes:
  postgres_data:
    name: sophistree_postgres_data
  caddy_data:
  caddy_config:
